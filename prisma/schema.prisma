generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int           @id @default(autoincrement())
  email       String        @unique
  name        String?
  permissions PERMISSIONS[] @default([])
  role        ROLE          @default(USER)
  status      Status        @default(false)
  password    String        @map("password")
  deleted     Boolean       @default(false)
  shipments   Shipment[]
  companyId   Int
  company     Company       @relation(fields: [companyId], references: [id])

  @@index([companyId])
}

model Vessel {
  id          Int      @id @default(autoincrement())
  fid         Int
  name        String
  flag        String
  shipment_id Int
  shipment    Shipment @relation(fields: [shipment_id], references: [id])
}

model Shipment {
  id              Int      @id @default(autoincrement())
  creatorId       Int
  companyId       Int
  status          String
  carrier         String
  arrivalTime     String
  tracking_number String
  type            String
  created_at      DateTime @default(now())
  aggregator      String
  sealine         String
  user            User     @relation(fields: [creatorId], references: [id])
  company         Company  @relation(fields: [companyId], references: [id])
  vessels         Vessel[]

  @@unique([companyId, tracking_number, creatorId], name: "Unique_Company_User_TrackingNumber")
}

model Company {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  address   String?
  country   String
  city      String
  industry  String?
  credits   Int        @default(0)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  users     User[]
  Shipment  Shipment[]
}

enum Status {
  true
  false
}

enum ROLE {
  ADMIN
  USER
  SUPER_ADMIN
}

enum PERMISSIONS {
  VIEW_DASHBOARD
  VIEW_SHIPMENT
  CREATE_SHIPMENT
  EDIT_SHIPMENT
  DELETE_SHIPMENT
  VIEW_USER
  CREATE_USER
  EDIT_USER
  DELETE_USER
}
